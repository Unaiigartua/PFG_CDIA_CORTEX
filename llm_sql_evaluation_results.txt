================================================================================
EVALUACIÓN DE MODELOS LLM PARA GENERACIÓN SQL
================================================================================

PREGUNTA #0: How many female patients have been diagnosed with osteoporosis and are also taking bisphosphonates?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
SELECT COUNT(DISTINCT co.person_id) AS num_female_patients
FROM PERSON p
JOIN CONDITION_OCCURRENCE co ON p.person_id = co.person_id
JOIN DRUG_EXPOSURE de ON p.person_id = de.person_id
JOIN CONCEPT c1 ON co.condition_concept_id = c1.concept_id
JOIN CONCEPT c2 ON de.drug_concept_id = c2.concept_id
WHERE p.gender_concept_id = 8532
AND c1.concept_id IN (80502,81390,4173335,4105090,77365,45766159,80824,4003481,44804272,44783850,4010333,40480160,4136988,4193701,4004622,4344377,44783435,42536671,4344144,4151725,4049167,45757320,4344378,4033089,4193139,4003479,45772069,4307175,37204244,4347298)
AND c2.concept_id IN (1557272,40173617,40173615,40173616,40173618,44817903,40173582,44818046,40173584,1516800,19123238,40174489,40174501,40174497,40174493,40132149,40174485,40174500,40174490,40174502,40174494,40174492,40144778,40174498,40174504,40174496,40174488,40227989,40174486,40228826,40174499,40174495,40174487,40174503,40174491,40174540,40174603,40174577,40228845,40174539,40174576,40228846,40174602,40131281,19123583,40174618,40174619,1512480,46275635,40053070,40141869,40126416,40141870,1524674,1593363,1593364,1524677,40241454,19126449,1593365,1593367,19006763,40241457,1593372,1593369,1593366,1593371,19126471,1593373,1593368,1593370,1524675,19126450,40241455,40241456,1524676,19126472,1511646,19093251,35604142,40094044,35604153,35604151,35604149,19061796,40175325,40175321,40175317,35604300,35604150,35604152,35604148,35604146,35604144,35604145,35604147,35604143,1552929,1552970,40040991,40174666,40174658,40174662,40040992,1552965,40040989,40174665,40174661,40174659,40174663,40174669,40174664,40168347,40174667,40174660,40174668,1578445)
AND de.drug_exposure_start_date <= co.condition_start_date;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT COUNT(DISTINCT p.person_id) AS num_female_patients
FROM PERSON p
JOIN (
    SELECT DISTINCT person_id, drug_concept_id, MIN(drug_exposure_start_date) AS condition_start_date
    FROM drug_exposure
    GROUP BY person_id, drug_concept_id
) de ON p.person_id = de.person_id
JOIN (
    SELECT concept_id, concept_name
    FROM concept
    WHERE concept_name = 'Osteoporosis'
) c ON de.drug_concept_id = c.concept_id
WHERE p.gender = 'F' AND de.condition_start_date <= COALESCE(c.condition_start_date, CURRENT_DATE);


================================================================================

PREGUNTA #1: How many times per year on average a person with atopic dermatitis goes to a hospital? split by year
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH dermatitis_patients AS (
    SELECT 
        co.person_id,
        YEAR(co.condition_start_date) - p.year_of_birth AS age_at_diagnosis
    FROM 
        CONDITION_OCCURRENCE co
    JOIN 
        PERSON p ON co.person_id = p.person_id
    WHERE 
        co.condition_concept_id IN (133834,4298597,4066382,4298599,4296193,4080929,4296192,4290738,4290734,4206125,4290736,4080928,4033671,4031630,4297478,4296190,4290737,4031631,4080927,4298598,4298601,4031013,4297362,4290740,4297495,40482226,4298600,4236759,4297494)
),
hospital_visits AS (
    SELECT 
        vo.person_id,
        YEAR(vo.visit_start_date) AS visit_year,
        COUNT(*) AS visit_count
    FROM 
        VISIT_OCCURRENCE vo
    WHERE 
        vo.person_id IN (SELECT person_id FROM dermatitis_patients) AND
        vo.visit_concept_id IN (9201, 262) -- 'Inpatient Visit' and 'Emergency room visit and Inpatient visit'
    GROUP BY 
        vo.person_id, visit_year
)
SELECT 
    visit_year,
    AVG(visit_count) AS average_visits_per_year
FROM 
    hospital_visits
GROUP BY 
    visit_year
ORDER BY 
    visit_year;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
WITH atopic_dermatitis_patients AS (
    SELECT 
        p.person_id,
        c.condition_concept_id,
        c.concept_name,
        YEAR(c.condition_start_date - p.year_of_birth) AS age,
        COUNT(DISTINCT h.hospital_visit_id) AS hospital_visits
    FROM 
        PERSON p
    JOIN 
        CONDITION c ON p.person_id = c.person_id
    JOIN 
        HOSPITAL_VISIT h ON p.person_id = h.person_id
    WHERE 
        c.condition_concept_id IN (SELECT concept_id FROM #atopic_dermatitis_codes)
        AND c.condition_start_date BETWEEN DATEADD(YEAR, -10, p.year_of_birth) AND DATEADD(YEAR, 10, p.year_of_birth)
    GROUP BY 
        p.person_id, c.condition_concept_id, c.concept_name, age
    HAVING 
        COUNT(DISTINCT h.hospital_visit_id) >= 1
), 
-- Calculate the average number of hospital visits per patient per year
average_hospital_visits AS (
    SELECT 
        condition_concept_id,
        concept_name,
        AVG(hospital_visits / CASE WHEN age > 17 THEN age - 17 ELSE 1 END) AS avg_hospital_visits_per_year
    FROM 
        atopic_dermatitis_patients
    GROUP BY 
        condition_concept_id, concept_name
)
SELECT * FROM average_hospital_visits WHERE avg_hospital_visits_per_year > 0;
```

This query calculates the average number of hospital visits per patient per year for those with atopic dermatitis, focusing on patients over 17 years old. The results are filtered to include only those conditions where the average number of hospital visits is greater than 0.

================================================================================

PREGUNTA #2: What is the count of medical records associated with anaphylaxis, pneumonia, influenza, hypothermia, paralysis, or blindness of both eyes?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
SELECT ce.condition_concept_id, c.concept_name, COUNT(*) AS records_count
  FROM condition_era ce
  JOIN concept c
    ON c.concept_id = ce.condition_concept_id
 WHERE ce.condition_concept_id
    IN /* top five condition concepts */
       ( 256723, 372906, 440377, 441202, 435371 )
 GROUP BY ce.condition_concept_id, c.concept_name
 ORDER BY records_count DESC;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT ce.condition_concept_id, c.concept_name, COUNT(DISTINCT person_id) AS num_people
FROM condition_era ce
JOIN concept c
ON ce.condition_concept_id = c.concept_id
WHERE ce.condition_concept_id
IN (
    SELECT condition_concept_id
    FROM (
        SELECT condition_concept_id, COUNT(DISTINCT person_id) AS num_people
        FROM condition_era
        GROUP BY condition_concept_id
        ORDER BY num_people DESC
        LIMIT 5
    ) AS top_conditions
)
GROUP BY ce.condition_concept_id, c.concept_name
ORDER BY num_people DESC;


================================================================================

PREGUNTA #3: What is the dose form of budesonide?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
SELECT
        A.concept_id drug_concept_id,
         A.concept_name drug_name,
         A.concept_code drug_concept_code,
         D.concept_id dose_form_concept_id,
         D.concept_name dose_form_concept_name,
         D.concept_code dose_form_concept_code
FROM
        concept_relationship CR,
         concept A,
         concept D
WHERE
        (getdate() >= CR.valid_start_date) AND (getdate() <= CR.valid_end_date)
        AND CR.concept_id_1 = A.concept_id
        AND CR.concept_id_2 = D.concept_id
        AND CR.concept_id_1 IN (19060647)
        AND CR.relationship_id = 'RxNorm has dose form';

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT 'Budesonide'
### Explanation
The query calculates the average duration between the end date of one drug treatment and the start date of the next treatment in patients with specific drug exposure. This helps measure the continuity and frequency of drug administration.


================================================================================

PREGUNTA #4: Let us define moderate to severe atopic dermatitis as having been prescribed at least 2 of the following drugs: tacrolimus, pimecrolimus, clobetasone, hydrocortisone, crisaborole, ruxolitinib, cyclosporine, triamcinolone, dupilumab, tofacitinib, baricitinib, upadacitinib, methylprednisolone, triamcinolone acetonide, clobetasol propionate, dexamethasone. What is the prevalence of moderate to severe atopic dermatitis patients >=16 years old?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH atopic_dermatitis_patients AS (
    SELECT DISTINCT
        p.person_id,
        YEAR(c.condition_start_date) - p.year_of_birth AS age
    FROM 
        PERSON p
    JOIN 
        CONDITION_OCCURRENCE c ON p.person_id = c.person_id
    WHERE 
        c.condition_concept_id IN (133834,4298597,4066382,4298599,4296193,4080929,4296192,4290738,4290734,4206125,4290736,4080928,4033671,4031630,4297478,4296190,4290737,4031631,4080927,4298598,4298601,4031013,4297362,4290740,4297495,40482226,4298600,4236759) AND
        YEAR(c.condition_start_date) - p.year_of_birth >= 16
),
moderate_severe_patients AS (
    SELECT 
        de.person_id,
        COUNT(DISTINCT de.drug_concept_id) AS num_drugs
    FROM 
        DRUG_EXPOSURE de
    WHERE 
        de.person_id IN (SELECT person_id FROM atopic_dermatitis_patients) AND
        de.drug_concept_id IN (950637,46287713,950671,950670,19082548,46287730,19085134,35200095,35604550,40090866,950694,40090864,42705351,19038656,42705352,19087441,19038655,43532781,19038657,46287717,19106285,950641,43532783,19106286,42705349,19038658,43532784,40090867,35200037,46287737,35604552,950662,42705350,35604551,19005858,19079712,46287732,40090865,42707647,19010291,46287714,950667,42707646,43532779,35200097,19010270,42707648,950664,35604553,40090868, 915935,19099277,40119606,19011354,40041924,19115253,19098376, 19005129,19005155,40025668,19099061,40025670,19120835,40031327,19115556,40025669,19005154,44815968,40025671,40025667,40025666,44816032,19008236,19008543,19008544,19002306,19002076,19095692,19064636,19002307, 975125,19088174,40049684,19085928,40049705,37003059,19081460,975926,37003063,19091192,19081472,975985,19110892,37003049,35604741,19110251,35604737,19081471,976015,975953,19110325,975928,975952,975929,19083661,19109288,35604728,19086249,19085298,976014,35604729,19093653,40115558,975984,976017,975955,42629025,976016,19114612,975986,976077,19109290,975954,975982,19093652,19110032,40049721,37003051,19043315, 1593397,1593398,1593400,1593403,1593404,1593401,1593406, 40244464,40244481,40244469,40244477,40244465,40244473,701928,40244485,40244476,40244480,40244472,40244484,40244468,40244470,40244482,40244478,40244474,40244466,40244486,40244475,40244471,40244479,40244483,40244467, 19010482,19010526,19010527,1758795,19010524,19010528,35200335,19081144,19098732,35606027,40236653,19099238,40028540,40028534,35200339,19080561,19121958,19117215,19121060,40236657,35200336,19043919,19082899,19043920,19028684,40028537,1758798,35606029,40028532,19010484,19043941,40028542,35200340,40028536,40028538,35606028,19125259,40028543,40125726, 903963,904395,904333,904331,904332,40122602,19112260,19112511,904385,904392,19109794,19089689,19095979,19109805,19091880,904427,42629017,19109785,40085517,40085536,40085508,19084816,19109784,19084817,904436,19093425,904335,19112268,40085513,40085516,904338,40085548,40085522,40085175,40085537,19083125,904387,792426,19118641,40234083,904435,40085539,40233947,40234796,40141448,19108479,19116166,35604854,40234029,19019894, 1593467,35200997,35201187,1593488,1146201,1593493,35201188,1593490,35200998,1146202,1537188,1146203,1593497,1146204,1537189,35201189,1593494,35200999,35201000,1593498,35201190,1146754,35202010,1593491,1537616,702620,1537617,1146755,1593496,702621,35202011, 42904205,42901323,35605682,37498555,1559832,739795,42901324,37498556,42901326,1559834,35605685,739797,42901964,739799,1559833,42901327,739800,739798,1559835,35605683,42901965,739802,37498557,35605686,35605688,37498558,35605689,35605684,37499793,37499794,35605687, 1510627,1510628,1758612,37497352,1510631,1510634,37497354,779706,37497353,1510632,1758613,1510635,37497355,1510638,779707, 1361580,1758758,779261,1361595,1361600,1758760,779263,1361598,779262,1758759,1361604,1361601,1758761,779264,1361605,1361707,1759248,780231,1361708,1759249,780232, 1506270,1506472,19084229,1506476,1506473,1506475,1506477,1506474,19090623,1506513,35606537,35606531,1506516,35606541,35606592,19110847,19093831,19099970,19110848,40060728,1506520,35606532,45774913,19043532,19043508,42901480,19043507,1506312,1506426,35606542,19019158,42901997,19106650,42901444,1506315,40060736,19043531,42901476,1506314,19118280,1506430,42901475,42901433,19043509,42901439,35606538,42901474, 40241179,792426,40241184,35604854,40163407,40234029,40234033,35604770,904509,40234037,40234083,40221061,40233988,40163406,40233976,40234009,40233992,40235895,40233987,904506,40233954,40234036,40234071,792428,35604856,40234090,46234381,40234093,40234021,40234080,702225,40233985,40234064,40234028,40234025,40233983,792427,1559863,35604773,40234027,40234075,40234092,1559868,40234026,40234094,40234024,40234065,40234074,40234063,40239009, 40164513,793715,40164500,40164535,37003154,1361306,40164533,40164532,793718,40164536,40164534,45775893,40164531,40164509,40164511,793716,40164516,40164512,40167053,40164529,40164510,40164521,40164501,40164523,40167052,40167077,40164525,40164514,40164522,40164530,19002304,40164519,40164524,37003157,40164517,40164518,19102575,40164526,793721,40164515,45775895,40164527,40164528,40164520, 1518254,19109490,1518608,1518606,1518610,1518609,1518684,40160929,19109489,19097275,1518605,37497611,1518607,1518715,19088901,1518642,1518651,19091242,1518604,1518747,19085227,1518611,19086197,1518683,1518714,19109493,1518644,1518682,1518603,1518687,1518646,19111975,1719010,1518742,40028610,1510432,19127835,19112486,19112198,40160933,1518689,19110973,40167743,40028601,1518686,1518691,40028598,19109391,40028586,1518643)
    GROUP BY 
        de.person_id
    HAVING 
        COUNT(DISTINCT de.drug_concept_id) >= 2
),
total_patients AS (
    SELECT 
        COUNT(DISTINCT person_id) AS total
    FROM 
        PERSON
)
SELECT 
    COUNT(DISTINCT m.person_id) AS num_moderate_severe,
    (SELECT total FROM total_patients) AS total,
    ROUND((COUNT(DISTINCT m.person_id) * 1.0 / (SELECT total FROM total_patients)) * 100, 2) AS prevalence
FROM 
    moderate_severe_patients m;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:


================================================================================

PREGUNTA #5: How many patients being diagnosed with ICD10-CM H35.81 diagnosis have recorded mortality?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH icd10cm_h3581 AS (
    SELECT
        DISTINCT person_id
    FROM
        condition_occurrence
    JOIN
        concept
    ON
        condition_occurrence.condition_source_concept_id = concept.concept_id
    WHERE
        concept.vocabulary_id IN  ('ICD10CM') AND
        concept.concept_code IN ('H35.81')
)
SELECT 
  COUNT(DISTINCT d.person_id) AS num_patients_with_mortality
FROM 
    death AS d
WHERE 
    d.person_id IN (SELECT person_id FROM icd10cm_h3581)
LIMIT 10000;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
WITH icd10cm_h5581 AS (
    SELECT
        person_id,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_end_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,
        condition_start_date,


================================================================================

PREGUNTA #6: How many patients with cancer have hypertension or anemia? 
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH cancer_conditions AS (
    SELECT DISTINCT
        co.person_id
    FROM condition_occurrence AS co
    WHERE co.condition_concept_id IN (443392,439392,436919,4141245,4194405,44790589,36716620,4311439,609278,4180914,4311148,432851,4162276,44784631,432571,764225,4162587,433435,317510,3656021,604497,4114221,4155297,40478953,4233629,4294181,139750)
),
hypertension_anemia AS (
    SELECT DISTINCT
        co.person_id
    FROM condition_occurrence AS co
    WHERE co.condition_concept_id IN (316866,320128,42709887,4289933,319826,4209293,4028741,4108213,443771,442604,37311147,45768449,40481896,4179379,43020424,4071202,317895,381290,4279525,4322024,4180283,317898,4199306,318437,37208890,4118910,42538946,4173820,4305599,37311148,43021748,312648,201313,4013643,4048212,4110948,4058987,44809027,312938,314958,4049389,4322893,4262182, 439777,434622,4280354,436659,4218974,4101001,137829,4228194,432295,4122079,4121106,4018378,4019001,4114026,434156,43022052,4098131,437247,4312008,4187768,4120448,4308125,4160238,4323223,435503,4006467,441258,4307469,4122927,4099889,433168,4079852,4125493,4244129,432967,4195171,432282,4032006,37119138,4188208,4339722,4003185,45773534,30978,4262948)
)
SELECT COUNT(DISTINCT cancer_conditions.person_id) AS patient_count
FROM cancer_conditions
JOIN hypertension_anemia ON cancer_conditions.person_id = hypertension_anemia.person_id;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT COUNT(DISTINCT person_id) AS patient_count
FROM (
    SELECT person_id
    FROM conditions
    WHERE condition_concept_id IN (443992,443992)
    GROUP BY person_id
    HAVING COUNT(condition_concept_id) >= 2
) AS subquery;


================================================================================

PREGUNTA #7: What is the average age of patients when they were first diagnosed with ckd? split by gender
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH ckd_patients AS (
    SELECT 
        co.person_id,
        p.gender_concept_id,
        YEAR(co.condition_start_date) - p.year_of_birth AS age_at_diagnosis
    FROM 
        CONDITION_OCCURRENCE co
    JOIN 
        PERSON p ON co.person_id = p.person_id
    WHERE 
        co.condition_concept_id IN (46271022,443597,606978,193782,606984,606951,198185,46284080,443601,606381,4322556,37017104,443614,44782675,36716947,443612,619679,43021852,443611,44782429,45768812,45763855,44784621,45763854)
),
first_diagnosis AS (
    SELECT 
        person_id,
        gender_concept_id,
        MIN(age_at_diagnosis) AS age_at_first_diagnosis
    FROM 
        ckd_patients
    GROUP BY 
        person_id, gender_concept_id
)
SELECT 
    CASE
        WHEN gender_concept_id = 8507 THEN 'Male'
        WHEN gender_concept_id = 8532 THEN 'Female'
        ELSE 'Other'
    END AS gender,
    AVG(age_at_first_diagnosis) AS average_age_at_first_diagnosis
FROM 
    first_diagnosis
GROUP BY 
    gender_concept_id
ORDER BY 
    gender;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
WITH first_diagnosis AS (
    SELECT 
        PERSON_ID, 
        MIN(CONDITION_START_DATE) AS first_diagnosis_date,
        GENDER_CONCEPT_ID
    FROM 
        condition_occurrence
    WHERE 
        condition_concept_id IN (45871402,45878402,45878402,45878404,45878404,45878405,45878406,45878407,45878408,45878409,45878410,45878411,45878412,45878413,45878414,45878415,45878416,45878417,45878418,45878419,45878420,45878421,45878422,45878423,45878424,45878425,45878426,45878427,45878428,45878429,45878430,45878431,45878432,45878433,45878434,45878435,45878436,45878437,45878438,45878439,45878440,45878441,45878442,45878444,45878445,45878446,45878447,45878448,45878449,4587845

================================================================================

PREGUNTA #8: How many patients aged over 45 with ischemic stroke underwent coronary artery bypass grafting within the year before diagnosis and were taking lovastatin?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH stroke_patients AS (
    SELECT p.person_id, co.condition_start_date, YEAR(co.condition_start_date) - p.year_of_birth AS age_at_diagnosis
    FROM PERSON p
    JOIN CONDITION_OCCURRENCE co ON p.person_id = co.person_id
    WHERE co.condition_concept_id IN (4310996,443454,374384,4211509,4189462,4159140,42535227,43530669,43531605,43530670,36717605,4298123,4153352,4046360,373503,603326,4138327,4111711,36716860,36716999,4243761,606048,4006976,42535681,4108359,37110765,37110241) AND YEAR(co.condition_start_date) - p.year_of_birth > 45
),
grafting_procedures AS (
    SELECT po.person_id, po.procedure_date AS grafting_date, po.procedure_concept_id AS grafting_concept_id
    FROM PROCEDURE_OCCURRENCE po
    WHERE po.procedure_concept_id IN (45889469,45887879,2107231,45889468,2107242,45889898,2107243,45889933,45888517,2107244,2107116,2107222,2107223,2107227,2107224,2107228,2100872,45888621,40757138,40756911,2107929,2107226,2107873,2100873,45887862,43527994,2107924,45889934,43527995,2107221,2107923,45889392,2107840,45889467,2107113,2107114,2107217,2107837,2107852,2107216,43528004,2107950,2107115,45889740,2107220,2107948,2107836,45889389,2107218,40756829)
),
lovastatin_exposure AS (
    SELECT de.person_id, de.drug_exposure_start_date AS lovastatin_date, de.drug_concept_id AS lovastatin_concept_id
    FROM DRUG_EXPOSURE de
    WHERE de.drug_concept_id IN (1592085,1592112,1592113,1592121,1592114,40000953,19019117,19071067,19019116,19031784,19087538,19031782,19019115,19031783,19071065,19087539,19071064,19087540,19113907,40000954,19031830,40000951,19031851,19040307,1592115,1592118,1592116,1592117,40116626,40000952,42705213,42707423,1592150,1592147,19102730,1592148,1592120,1592149,42707431)
)
SELECT COUNT(DISTINCT sp.person_id) AS num_patients
FROM stroke_patients sp
JOIN grafting_procedures gp ON sp.person_id = gp.person_id
JOIN lovastatin_exposure le ON sp.person_id = le.person_id
WHERE DATEDIFF('day', gp.grafting_date, sp.condition_start_date) BETWEEN 0 AND 365
AND DATEDIFF('day', le.lovastatin_date, sp.condition_start_date) BETWEEN 0 AND 365;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
WITH ckd_patients AS (
    SELECT 
        P.PATIENT_ID, 
        P.GENDER, 
        P.AGE, 
        P.CKD_DIAGNOSIS_DATE, 
        CO.START_DATE AS CKD_DIAGNOSIS_DATE, 
        CO.END_DATE AS CKD_END_DATE, 
        CO.START_DATE AS CKD_START_DATE, 
        CO.END_DATE AS CKD_END_DATE, 
        CO.MEDICATION_ID AS MEDICATION_ID, 
        CO.MEDICATION_NAME AS MEDICATION_NAME, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DURATION AS MEDICATION_DURATION, 
        CO.FREQUENCY AS MEDICATION_FREQUENCY, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DURATION AS MEDICATION_DURATION, 
        CO.FREQUENCY AS MEDICATION_FREQUENCY, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.FREQUENCY AS MEDICATION_FREQUENCY, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOSAGE, 
        CO.DOSAGE AS MEDICATION_DOS

================================================================================

PREGUNTA #9: How many patients older than 16 years old have been affected by anemia?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
SELECT COUNT(DISTINCT p.person_id) AS num_patients
FROM PERSON p
JOIN CONDITION_ERA ce ON p.person_id = ce.person_id
WHERE ((YEAR(ce.condition_era_start_date) - p.year_of_birth) > 16
OR (YEAR(ce.condition_era_end_date) - p.year_of_birth) > 16)
AND ce.condition_concept_id IN (439777,434622,4280354,436659,4218974,4101001,137829,4228194,432295,4122079,4121106,4018378,4019001,4114026,434156,43022052,4098131,437247,4312008,4187768,4120448,4308125,4160238,4323223,435503,4006467,441258,4307469,4122927,4099889,433168,4079852,4125493,4244129,432967,4195171,432282,4032006,37119138,4188208,4339722,4003185,45773534,30978,4262948)

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT COUNT(DISTINCT p.person_id) AS num_patients
FROM PERSON p
JOIN (
    SELECT DISTINCT c.concept_id, c.concept_name, c.domain_id
    FROM CONCEPT c
    JOIN (
        SELECT DISTINCT cc.concept_id, cc.concept_name, cc.domain_id
        FROM CONCEPT cc
        JOIN (
            SELECT DISTINCT cc.concept_id, cc.concept_name, cc.domain_id
            FROM (
                SELECT DISTINCT cc.concept_id, cc.concept_name, cc.domain_id
                FROM (
                    SELECT DISTINCT cc.concept_id, cc.concept_name, cc.domain_id
                    FROM (
                        SELECT cc.concept_id, cc.concept_name, cc.domain_id
                        FROM (
                            SELECT cc.concept_id, cc.concept_name, cc.domain_id
                            FROM (
                                SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                FROM (
                                    SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                    FROM (
                                        SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                        FROM (
                                            SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                            FROM (
                                                SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                FROM (
                                                    SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                    FROM (
                                                        SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                        FROM (
                                                            SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                            FROM (
                                                                SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                                FROM (
                                                                    SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                                    FROM (
                                                                        SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                                        FROM (
                                                                            SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                                            FROM (
                                                                                SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                                                FROM (
                                                                                    SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                                                    FROM (
                                                                                        SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                                                        FROM (
                                                                                            SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                                                            FROM (
                                                                                                SELECT cc.concept_id, cc.concept_name, cc.domain_id
                                                                                                FROM (
                                                                                                    SELECT cc.concept_id

================================================================================

PREGUNTA #10: How many patients suffering from cancer started taking venlafaxine within two years?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH cancer_patients AS (
    SELECT 
        co.person_id,
        co.condition_start_date as cancer_start_date
    FROM 
        CONDITION_OCCURRENCE co
    WHERE 
        co.condition_concept_id IN (443392,439392,436919,4141245,4194405,44790589,36716620,4311439,609278,4180914,4311148,4190366,432851,4168352,4162276,37109254,44784631,432571,764225,4162587,433435,317510,3656021,604497,4114221,4155297,40478953,4233629,4294181,139750)
),
venlafaxine_users AS (
    SELECT 
        de.person_id,
        de.drug_exposure_start_date as venlafaxine_start_date
    FROM 
        DRUG_EXPOSURE de
    WHERE 
        de.drug_concept_id IN (743670,19083159,19083160,743759,743754,19131402,19086246,780146,743755,40100732,19118743,19021628,19118741,743752,19021629,743718,19021627,19127359,19079835,743720,743753,40100733,19039818,19039819,40100730,40100731,19039820,19039822,19039817,19134632,19131403,743760,780055,743761,19103820,40142355,743792,19103819,19134679,19134859,19134860,19134861,780292,19132563,743721,19132560,743719,743717,19103810)
)
SELECT 
    COUNT(DISTINCT cp.person_id) as patients
FROM 
    cancer_patients cp
JOIN 
    venlafaxine_users vu ON cp.person_id = vu.person_id
WHERE 
    DATEDIFF('year', cp.cancer_start_date, vu.venlafaxine_start_date) <= 2;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT COUNT(DISTINCT p.person_id) AS num_patients
FROM PERSON p
JOIN DRUG_EXPOSURE de ON p.person_id = de.person_id
WHERE de.drug_name = 'Venlafaxine'
AND DATEDIFF('year', de.drug_exposure_start_date, de.drug_exposure_end_date) <= 2;


================================================================================

PREGUNTA #11: What is the prevalence of endometriosis?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH condition_women AS (
  SELECT
    DISTINCT p.person_id,
    co.condition_start_date,
    co.condition_end_date,
    YEAR(co.condition_start_date) AS year,
    YEAR(co.condition_start_date) - p.year_of_birth AS age,
    CASE
        WHEN YEAR(co.condition_start_date) - p.year_of_birth BETWEEN 15 AND 49 THEN '15-49'
        ELSE 'Other'
    END AS age_group
  FROM
    PERSON p
  JOIN
    CONDITION_OCCURRENCE co ON p.person_id = co.person_id
  JOIN
    OBSERVATION_PERIOD op ON p.person_id = op.person_id
  WHERE 
    p.gender_concept_id = 8532 AND
    YEAR(op.observation_period_start_date) <= YEAR(co.condition_start_date) AND
    YEAR(op.observation_period_end_date) >= YEAR(co.condition_start_date) AND
    condition_concept_id IN (433527,
            200461,
            4058381,
            4146995,
            199881,
            4288543,
            37110262,
            4127413,
            46273242,
            4264439,
            197033,
            37119080,
            42536674,
            139882,
            4132140,
            37117191,
            4224161,
            4034016,
            4189364,
            4195507,
            4211992,
            194420,
            4272614,
            4222798,
            37110261,
            606426,
            606399,
            194421,
            4276944,
            4019817,
            4182703,
            40489883,
            606395,
            4184134,
            4003678,
            36715805,
            37209188,
            4072148,
            200459,
            36713394,
            44783285,
            4051345,
            4176409,
            36717630,
            4317964,
            4260818,
            4302765,
            200775,
            4307585,
            199886) 
),
all_enrolled_women_2010_2022 as  (
     SELECT op.person_id,
        YEAR_RANGE.year - p.year_of_birth AS age,
        p.year_of_birth,
        YEAR_RANGE.year,
        CASE
            WHEN YEAR_RANGE.year - p.year_of_birth BETWEEN 15 AND 49 THEN '15-49'
            ELSE 'Other'
        END AS age_group  
    FROM (SELECT 2010 AS year UNION ALL SELECT 2011 UNION ALL SELECT 2012 UNION ALL SELECT 2013 UNION ALL SELECT 2014 UNION ALL SELECT 2015 UNION ALL SELECT 2016 UNION ALL SELECT 2017 UNION ALL SELECT 2018 UNION ALL SELECT 2019 UNION ALL SELECT 2020 UNION ALL SELECT 2021 UNION ALL SELECT 2022) YEAR_RANGE
    JOIN observation_period op
    JOIN person p ON op.person_id = p.person_id
    WHERE p.gender_concept_id = 8532
        AND year(op.observation_period_end_date) >= YEAR_RANGE.year 
        AND year(op.observation_period_start_date) <= YEAR_RANGE.year
),
numerator as (
    SELECT 
        year,
        age_group,
        COUNT(DISTINCT person_id) AS num_women
    FROM 
        condition_women
    WHERE age_group != 'Other'
    GROUP BY year, age_group
),
denominator as (
    select year, age_group, count(distinct person_id) num_women_enroll
    from all_enrolled_women_2010_2022
    where age_group != 'Other'
    group by year, age_group
)
select n.year, n.age_group, n.num_women, d.num_women_enroll, round(n.num_women / d.num_women_enroll*100000, 2) as prevalence    
from numerator n join denominator d on n.year = d.year and n.age_group = d.age_group;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
WITH condition_women AS (
    SELECT
        p.person_id,
        p.gender_concept_id,
        p.gender_name,
        p.age,
        p.age_of_birth,
        p.observation_period_start_date,
        COALESCE(p.observation_period_end_date, 'Unknown') AS condition_end_date,
        CASE
            WHEN p.observation_period_end_date IS NULL THEN 'No end date'
            ELSE 'End date: ' || TO_CHAR(p.observation_period_end_date, 'YYYY-MM-DD')
        END AS condition_status,
        CASE
            WHEN p.observation_period_end_date IS NULL THEN 'No end date'
            ELSE 'End date: ' || TO_CHAR(p.observation_period_end_date, 'YYYY-MM-DD')
        END AS condition_end_date,
        CASE
            WHEN p.observation_period_end_date IS NULL THEN 'No end date'
            ELSE 'End date: ' || TO_CHAR(p.observation_period_end_date, 'YYYY-MM-DD')
        END AS condition_end_date,
        CASE
            WHEN p.observation_period_end_date IS NULL THEN 'No end date'
            ELSE 'End date: ' || TO_CHAR(p.observation_period_end_date, 'YYYY-MM-DD')
        END AS condition_end_date,
        CASE
            WHEN p.observation_period_end_date IS NULL THEN 'No end date'
            ELSE 'End date: ' || TO_CHAR(p.observation_period_end_date, 'YYYY-MM-DD')
        END AS condition_end_date,
        CASE
            WHEN p.observation_period_end_date IS NULL THEN 'No end date'
            ELSE 'End date: ' || TO_CHAR(p.observation_period_end_date, 'YYYY-MM-DD')
        END AS condition_end_date,
        CASE
            WHEN p.observation_period_end_date IS NULL THEN 'No end date'
            ELSE 'End date: ' || TO_CHAR(p.observation_period_end_date, 'YYYY-MM-DD')
        END AS condition_end_date,
        CASE
            WHEN p.observation_period_end_date IS NULL THEN 'No end date'
            ELSE 'End date: ' || TO_CHAR(p.observation_period_end_date, 'YYYY-MM-DD')
        END AS condition_end_date,
        CASE
            WHEN p.observation_period_end_date IS NULL THEN 'No end date'
            ELSE 'End date: ' || TO_CHAR(p.observation_period_end_date, 'YYYY-MM-DD')
        END AS condition_end_date,
        CASE
            WHEN p

================================================================================

PREGUNTA #12: How many hispanic women suffer from anemia?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
SELECT COUNT(DISTINCT p.person_id) AS num_patients
FROM PERSON p
JOIN CONDITION_ERA ce ON p.person_id = ce.person_id
WHERE p.gender_concept_id = 8532
AND p.ethnicity_concept_id = 38003563
AND ce.condition_concept_id IN (439777,434622,4280354,436659,4218974,4101001,137829,4228194,432295,4122079,4121106,4018378,4019001,4114026,434156,43022052,4098131,437247,4312008,4187768,4120448,4308125,4160238,4323223,435503,4006467,441258,4307469,4122927,4099889,433168,4079852,4125493,4244129,432967,4195171,432282,4032006,37119138,4188208,4339722,4003185,45773534,30978,4262948)

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT COUNT(DISTINCT p.person_id) AS num_patients
FROM PERSON p
JOIN CONDITION c ON p.person_id = c.person_id
WHERE p.gender_concept_id = 5532
AND p.ethnicity_concept_id = 8800563
AND c.condition_concept_id = 316666
AND (YEAR(c.start_date) - p.year_of_birth) > 40;

### Explanation
- **SELECT COUNT(DISTINCT p.person_id): This query counts the number of unique patients who meet the specified conditions.
- **FROM PERSON p: This specifies the main table containing demographic information about the patients.
- **JOIN CONDITION c ON p.person_id = c.person_id: This joins the PERSON table with the CONDITION table to filter records based on specific condition codes.
- **WHERE p.gender_concept_id = 5532: This filters the records to include only female patients.
- **AND p.ethnicity_concept_id = 8800563: This filters the records to include only patients of Hispanic ethnicity.
- **AND c.condition_concept_id = 316666: This filters the records to include only those with a specific condition code related to anemia.
- **AND (YEAR(c.start_date) - p.year_of_birth) > 40: This condition ensures that the patient is at least 40 years old when the condition started.

### Key Points:
- The query focuses on counting the number of unique patients who meet specific demographic and condition criteria.
- It uses standard SQL JOIN statements to combine relevant tables and filter records based on specific conditions.
- The query is structured to provide clear and actionable insights into the data, focusing on key demographic and operational metrics.

### Input:
- None

### Response:
- The query returns the following information:
  - The count of unique patients who meet the specified conditions.
  - The query is structured to follow SQL best practices, ensuring clarity and accuracy in data retrieval.

### Data Used:
- Relevant clinical and demographic data from the Odoo database.

### Key Fields:
- COUNT(DISTINCT p.person_id): Counts the number of unique patients.
- p.gender_concept_id: Filters records to include only female patients.
- p.ethnicity_concept_id: Filters records to include only patients of Hispanic ethnicity.
- c.condition_concept_id: Filters records to include only

================================================================================

PREGUNTA #13: How many people are taking warfarin?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
SELECT COUNT(DISTINCT de.person_id) AS person_count
FROM drug_exposure de
JOIN concept c ON de.drug_concept_id = c.concept_id
WHERE c.concept_id IN (1310149,40163539,40163553,40163559,40093132,40163509,40163523,40163545,40163533,40163565,40163517,40163507,40163529,40163522,40163516,40163557,40163527,40093134,40093130,40163564,40163552,40163514,40163510,40121983,40093133,40163560,40163563,40163524,40121984,40163521,40163515,40163544,40163540,40163528,40163543,40163558,40163551,40163554,40163550,40163546,40163508,40163518,40163538,40093131,40163570,40163534,40163569,40163532,40163537,40163566)

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT COUNT(DISTINCT p.person_id) AS num_patients
FROM PERSON p
JOIN DRUG_EXPOSURE de ON p.person_id = de.person_id
JOIN CONCEPT c ON de.drug_concept_id = c.concept_id
WHERE c.concept_name = 'Warfarin'
AND de.drug_exposure_start_date <= CURRENT_DATE;


================================================================================

PREGUNTA #14: What are the branded drugs for simethicone?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
SELECT        A.concept_id Ingredient_concept_id,
                A.concept_name Ingredient_concept_name,
                A.concept_code Ingredient_concept_code,
                A.concept_class_id Ingredient_concept_class,
                D.concept_id branded_drug_id,
                D.concept_name branded_drug_name,
                D.concept_code branded_drug_concept_code,
                D.concept_class_id branded_drug_concept_class
FROM        concept_ancestor CA,
                concept A,
                concept D
WHERE
        CA.ancestor_concept_id IN (966991)
AND        CA.ancestor_concept_id = A.concept_id
AND        CA.descendant_concept_id = D.concept_id
AND        D.concept_class_id = 'Branded Drug'
AND        (getdate() >= A.valid_start_date)
AND        (getdate() <= A.valid_end_date)
AND        (getdate() >= D.valid_start_date)
AND        (getdate() <= D.valid_end_date)

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT DISTINCT drug_name FROM drug_exposure WHERE drug_concept_id IN (799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,799284,79

================================================================================

PREGUNTA #15: How many people have cutaneous lupus erythematosus, systemic lupus erythematosus, or psoriasis?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
SELECT ce.condition_concept_id, c.concept_name, COUNT(DISTINCT person_id) AS num_people
  FROM condition_era ce
  JOIN concept c
    ON c.concept_id = ce.condition_concept_id
 WHERE ce.condition_concept_id
    IN /* top condition concepts by number of people */
        ( 4324123, 257628, 140168)
 GROUP BY ce.condition_concept_id, c.concept_name
 ORDER BY num_people DESC;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:


================================================================================

PREGUNTA #16: What is the overall proportion of patients diagnosed with Acute Kidney Injury (AKI) using ICD9 codes (584.0, 584.5, 584.6, 584.7, 584.8, 584.9, 586) and ICD10 code (N17.9)?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH aki_diagnoses AS (
    SELECT
        DISTINCT person_id
    FROM
        condition_occurrence
    JOIN
        concept
    ON
        condition_occurrence.condition_source_concept_id = concept.concept_id
    WHERE
        concept.vocabulary_id IN  ('ICD9CM') AND
        concept.concept_code IN ('584.0', '584.5', '584.6', '584.7', '584.8', '584.9', '586') OR
        concept.vocabulary_id IN ('ICD10CM') AND
        concept.concept_code IN ('N17.9')
)
SELECT
  COUNT(DISTINCT ad.person_id) AS aki_patient_count,
  COUNT(DISTINCT p.person_id) AS total_patient_count,
  COUNT(DISTINCT ad.person_id) / COUNT(DISTINCT p.person_id) AS proportion_of_patients_with_aki
FROM person AS p
LEFT JOIN aki_diagnoses AS ad ON p.person_id = ad.person_id

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
WITH cabg_procedures AS (
    SELECT DISTINCT person_id
    FROM procedure_occurrence
    WHERE 
        procedure_code IN ('66.10', '66.11', '66.12', '66.13', '66.14', '66.15', '66.16', '66.17', '66.18', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.19', '66.1

================================================================================

PREGUNTA #17: What is the 5-year age bucket distribution (0-4, 5-9, etc)  at time of first ICD10-CM N18.6 diagnosis?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH icd10cm_n186 AS (
    SELECT
        DISTINCT person_id,
        condition_start_date
    FROM
        condition_occurrence
    JOIN
        concept
    ON
        condition_occurrence.condition_source_concept_id = concept.concept_id
    WHERE
        concept.vocabulary_id IN  ('ICD10CM') AND
        concept.concept_code IN ('N18.6')
),
first_diagnosis AS (
    SELECT 
      icd.person_id, 
      MIN(icd.condition_start_date) AS first_diagnosis_date
    FROM icd10cm_n186 AS icd
    GROUP BY icd.person_id
)
SELECT 
  FLOOR((EXTRACT(YEAR FROM fd.first_diagnosis_date) - p.year_of_birth) / 5) * 5 AS age_bucket,
  COUNT(DISTINCT fd.person_id) AS patient_count
FROM first_diagnosis AS fd
JOIN person AS p ON fd.person_id = p.person_id
GROUP BY age_bucket
ORDER BY age_bucket;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
WITH icd10cm_h5881 AS (
    SELECT 
        person_id, 
        MIN(condition_start_date) AS first_diagnosis_date
    FROM (
        SELECT 
            person_id, 
            condition_start_date,
            condition_start_date,
            condition_source_concept_id,
            condition_concept_id
        FROM (
            SELECT 
                person_id, 
                condition_start_date,
                condition_start_date,
                condition_source_concept_id,
                ROW_NUMBER() OVER (PARTITION BY person_id, condition_start_date DESC) AS row_num
            FROM (
                SELECT 
                    person_id, 
                    condition_start_date,
                    condition_start_date,
                    condition_source_concept_id,
                    condition_concept_id
                FROM (
                    SELECT 
                        person_id, 
                        condition_start_date,
                        condition_start_date,
                        condition_source_concept_id,
                        ROW_NUMBER() OVER (PARTITION BY person_id, condition_start_date DESC) AS row_num
                    FROM (
                        SELECT 
                            person_id, 
                            condition_start_date,
                            condition_start_date,
                            condition_source_concept_id,
                            ROW_NUMBER() OVER (PARTITION BY person_id, condition_start_date DESC) AS row_num
                        FROM (
                            SELECT 
                                person_id, 
                                condition_start_date,
                                condition_start_date,
                                condition_source_concept_id,
                                ROW_NUMBER() OVER (PARTITION BY person_id, condition_start_date DESC) AS row_num
                            FROM (
                                SELECT 
                                    person_id, 
                                    condition_start_date,
                                    condition_start_date,
                                    condition_source_concept_id,
                                    ROW_NUMBER() OVER (PARTITION BY person_id, condition_start_date DESC) AS row_num
                                FROM (
                                    SELECT 
                                        person_id, 
                                        condition_start_date,
                                        condition_start_date,
                                        condition_source_concept_id,
                                        ROW_NUMBER() OVER (PARTITION BY person_id, condition_start_date DESC) AS row_num
                                    FROM (
                                        SELECT 
                                            person_id, 
                                            condition_start_date,
                                            condition_source_concept_id,
                                            ROW_NUMBER() OVER (PARTITION BY person_id, condition_start_date DESC) AS row_num
                                        FROM (
                                            SELECT 
                                                person_id, 
                                                condition_start_date,
                                                condition_source_concept_id,
                                                ROW_NUMBER() OVER (PARTITION BY person_id, condition_start_date DESC) AS row_num
                                            FROM (
                                                SELECT 
                                                    person_id, 
                                                    condition_start_date,
                                                   

================================================================================

PREGUNTA #18: How many patients have cancer and hypertension or anemia? 
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH cancer_conditions AS (
    SELECT DISTINCT
        co.person_id
    FROM condition_occurrence AS co
    WHERE co.condition_concept_id IN (443392,439392,436919,4141245,4194405,44790589,36716620,4311439,609278,4180914,4311148,432851,4162276,44784631,432571,764225,4162587,433435,317510,3656021,604497,4114221,4155297,40478953,4233629,4294181,139750)
),
hypertension_anemia AS (
    SELECT DISTINCT
        co.person_id
    FROM condition_occurrence AS co
    WHERE co.condition_concept_id IN (316866,320128,42709887,4289933,319826,4209293,4028741,4108213,443771,442604,37311147,45768449,40481896,4179379,43020424,4071202,317895,381290,4279525,4322024,4180283,317898,4199306,318437,37208890,4118910,42538946,4173820,4305599,37311148,43021748,312648,201313,4013643,4048212,4110948,4058987,44809027,312938,314958,4049389,4322893,4262182, 439777,434622,4280354,436659,4218974,4101001,137829,4228194,432295,4122079,4121106,4018378,4019001,4114026,434156,43022052,4098131,437247,4312008,4187768,4120448,4308125,4160238,4323223,435503,4006467,441258,4307469,4122927,4099889,433168,4079852,4125493,4244129,432967,4195171,432282,4032006,37119138,4188208,4339722,4003185,45773534,30978,4262948)
)
SELECT COUNT(DISTINCT cancer_conditions.person_id) AS patient_count
FROM cancer_conditions
JOIN hypertension_anemia ON cancer_conditions.person_id = hypertension_anemia.person_id;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT COUNT(DISTINCT person_id) AS patient_count
FROM (
    SELECT person_id
    FROM conditions
    WHERE condition_concept_id IN (443907,443907)
    UNION ALL
    SELECT person_id
    FROM conditions
    WHERE condition_concept_id IN (443907,443907)
) AS combined_conditions;


================================================================================

PREGUNTA #19: How many patients started taking venlafaxine within the last fifteen years, group patients by gender?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH venlafaxine_exposure AS (
    SELECT de.person_id, de.drug_exposure_start_date, p.gender_concept_id
    FROM PERSON p
    JOIN DRUG_EXPOSURE de ON p.person_id = de.person_id
    WHERE de.drug_concept_id IN (743670,19083160,743759,19131402,743754,19083159,19086246,743755,780146,40100732,19118741,19021628,19118743,19127359,19021629,743720,743752,743753,19079835,19021627,743718,40100733,40100731,40100730,19039820,19039818,19039822,19039817,19039819,780055,40142355,743761,19103820,19131403,19134679,19134632,19103819,743792,743760,19134861,19134860,19134859,19132563,19103810,780292,743721,743717,19132560,19132562)
    AND de.drug_exposure_start_date BETWEEN DATEADD('year', -15, CURRENT_DATE) AND CURRENT_DATE
)
SELECT c.concept_name AS gender, COUNT(DISTINCT ve.person_id) AS num_patients
FROM venlafaxine_exposure ve
JOIN CONCEPT c ON ve.gender_concept_id = c.concept_id
GROUP BY c.concept_name
LIMIT 10000;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
SELECT 
    CASE 
        WHEN COUNT(DISTINCT p.person_id) > 0 THEN 'Yes'
        ELSE 'No'
    END AS has_data,
    COUNT(DISTINCT p.person_id) AS num_patients
FROM 
    PERSON p
JOIN 
    DRUG_EXPOSURE de ON p.person_id = de.person_id
WHERE 
    de.drug_name = 'Venlafaxine' AND
    de.drug_exposure_start_date >= DATEADD(YEAR, -15, GETDATE())
GROUP BY 
    p.gender
ORDER BY 
    num_patients DESC;


================================================================================

PREGUNTA #20: Within the cohort of patients with chronic liver disease, what percentage experience ascites within 3 years of diagnosis?
--------------------------------------------------------------------------------
SQL DE REFERENCIA:
WITH liver_disease_patients AS (
    SELECT 
        PERSON_ID, 
        CONDITION_START_DATE AS LIVER_DISEASE_DIAGNOSIS_DATE
    FROM 
        CONDITION_OCCURRENCE
    WHERE 
        CONDITION_CONCEPT_ID IN (4212540,200763,4340390,40481531,4012113,201613,45771255,45769564,4043383,3655440,4064161,37017009,199867,198964,4215650,4026132,46269836,4026125,4267417,4238978,4146181,43531723,4290259,4327331,200451,4247138,4303098,4049419,4157032,4098766,197494,194692,4141669)
),
ascites_after_liver_disease AS (
    SELECT 
        ldp.PERSON_ID, 
        co.CONDITION_START_DATE AS ASCITES_DATE,
        YEAR(co.CONDITION_START_DATE) - YEAR(ldp.LIVER_DISEASE_DIAGNOSIS_DATE) AS YEARS_AFTER_DIAGNOSIS
    FROM 
        liver_disease_patients ldp
    JOIN 
        CONDITION_OCCURRENCE co ON ldp.PERSON_ID = co.PERSON_ID
    WHERE 
        co.CONDITION_CONCEPT_ID IN (200528,192735,4324264,4094356,4144929,4341778,4342883,4204072,43020550,4180155,4078799,4199927,4260661,4340505,4055983,4045262,4057130,4230207,4056097,4056098,43020551,46269816,40480112,194983,46269817) AND
        co.CONDITION_START_DATE BETWEEN ldp.LIVER_DISEASE_DIAGNOSIS_DATE AND DATEADD('year', 3, ldp.LIVER_DISEASE_DIAGNOSIS_DATE)
),
total_liver_disease_patients AS (
    SELECT 
        COUNT(DISTINCT PERSON_ID) AS TOTAL_LIVER_DISEASE_PATIENTS
    FROM 
        liver_disease_patients
),
ascites_patients_per_year AS (
    SELECT 
        YEARS_AFTER_DIAGNOSIS, 
        COUNT(DISTINCT PERSON_ID) AS ASCITES_PATIENTS
    FROM 
        ascites_after_liver_disease
    GROUP BY 
        YEARS_AFTER_DIAGNOSIS
)
SELECT 
    ap.YEARS_AFTER_DIAGNOSIS, 
    ap.ASCITES_PATIENTS, 
    tp.TOTAL_LIVER_DISEASE_PATIENTS, 
    ROUND((ap.ASCITES_PATIENTS * 100.0) / tp.TOTAL_LIVER_DISEASE_PATIENTS, 2) AS PERCENTAGE
FROM 
    ascites_patients_per_year ap, 
    total_liver_disease_patients tp
ORDER BY 
    ap.YEARS_AFTER_DIAGNOSIS;

MODELO: sqlCoder-Qwen2.5-8bit
SQL GENERADO:
WITH first_diagnosis AS (
    SELECT 
        PERSON_ID, 
        MIN(CONDITION_START_DATE) AS first_diagnosis_date
    FROM 
        OCCURRENCE
    WHERE 
        CONDITION_CONCEPT_ID IN (46271022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,44661022,4466

================================================================================


FIN DE LA EVALUACIÓN
